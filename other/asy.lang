<?xml version="1.0" encoding="UTF-8"?>
<!--

 This file is part of GtkSourceView

 Authors: Marco Barisione, Emanuele Aina
 Copyright (C) 2005-2007 Marco Barisione <barisione@gmail.com>
 Copyright (C) 2005-2007 Emanuele Aina

 GtkSourceView is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation; either
 version 2.1 of the License, or (at your option) any later version.

 GtkSourceView is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public License
 along with this library; if not, see <http://www.gnu.org/licenses/>.

-->
<language id="asy" name="Asymptote" version="2.0" _section="Source">
  <metadata>
    <property name="mimetypes">text/x-asy;text/x-asysrc</property>
    <property name="globs">*.asy</property>
    <property name="line-comment-start">//</property>
    <property name="block-comment-start">/*</property>
    <property name="block-comment-end">*/</property>
  </metadata>

  <definitions>

   <define-regex id="escaped-character" extended="true">
      \\(                   # leading backslash
      [\\\"\'nrbtfav\?] |   # escaped character
      [0-7]{1,3} |          # one, two, or three octal digits
      x[0-9A-Fa-f]+         # 'x' followed by hex digits
      )
    </define-regex>

    <context id="printf" style-ref="def:special-char" extend-parent="false">
      <match extended="true">
        \%\%|\%
        (?:[1-9][0-9]*\$)?      # argument
        [#0\-\ \+\'I]*          # flags
        (?:[1-9][0-9]*|\*)?     # width
        (?:\.\-?(?:[0-9]+|\*))? # precision
        (?:hh|ll|[hlLqjzt])?    # length modifier
        [diouxXeEfFgGaAcsCSpnm] # conversion specifier
      </match>
    </context>

    <context id="string" style-ref="def:string" end-at-line-end="true" class="string" class-disabled="no-spell-check">
      <start>L?"</start>
      <end>"</end>
      <include>
        <context ref="printf"/>
        <context id="escaped-character" style-ref="escaped-character">
          <match>\%{escaped-character}</match>
        </context>
        <context ref="def:line-continue"/>
      </include>
    </context>

    <context id="char" style-ref="def:character" class="string">
      <match>L?'(\%{escaped-character}|.)'</match>
    </context>


    <context id="float" style-ref="def:floating-point">
      <match extended="true">
        (?&lt;![\w\.])
        ((\.[0-9]+ | [0-9]+\.[0-9]*) ([Ee][+-]?[0-9]*)? |
         ([0-9]+[Ee][+-]?[0-9]*))
        [fFlL]?
        (?![\w\.])
      </match>
    </context>

    <context id="hexadecimal" style-ref="def:hexadecimal">
      <match extended="true">
        (?&lt;![\w\.])
        0[xX][a-fA-F0-9]+[uUlL]*
        (?![\w\.])
      </match>
    </context>

    <context id="invalid-hexadecimal" style-ref="def:error">
      <match extended="true">
        (?&lt;![\w\.])
        0[xX][a-fA-F0-9]*[g-zG-Z][a-zA-Z0-9]*[uUlL]*
        (?![\w\.])
      </match>
    </context>

    <context id="octal" style-ref="def:octal">
      <match extended="true">
        (?&lt;![\w\.])
        0[0-7]+[uUlL]*
        (?![\w\.])
      </match>
    </context>

    <context id="invalid-octal" style-ref="def:error">
      <match extended="true">
        (?&lt;![\w\.])
        0[0-7]*[89][0-9]*[uUlL]*
        (?![\w\.])
      </match>
    </context>

    <context id="decimal" style-ref="def:decimal">
      <match extended="true">
        (?&lt;![\w\.])
        (0|[1-9][0-9]*)[uUlL]*
        (?![\w\.])
      </match>
    </context>

    <context id="keywords" style-ref="def:keyword">
      <keyword>break</keyword>
      <keyword>case</keyword>
      <keyword>continue</keyword>
      <keyword>default</keyword>
      <keyword>do</keyword>
      <keyword>else</keyword>
      <keyword>enum</keyword>
      <keyword>for</keyword>
      <keyword>goto</keyword>
      <keyword>if</keyword>
      <keyword>return</keyword>
      <keyword>struct</keyword>
      <keyword>switch</keyword>
      <keyword>typedef</keyword>
      <keyword>class</keyword>
      <keyword>while</keyword>
      <keyword>new</keyword>
    </context>

    <context id="types" style-ref="def:type">
      <keyword>bool</keyword>
      <keyword>int</keyword>
      <keyword>real</keyword>
      <keyword>pair</keyword>
      <keyword>triple</keyword>
      <keyword>pen</keyword>
      <keyword>path</keyword>
      <keyword>Label</keyword>
      <keyword>static</keyword>
      <keyword>transform</keyword>
      <keyword>margin</keyword>
      <keyword>position</keyword>
      <keyword>arrowhead</keyword>
      <keyword>frame</keyword>
      <keyword>picture</keyword>
      <keyword>filltype</keyword>
    </context>

    <context id="boolean" style-ref="def:boolean">
      <keyword>true</keyword>
      <keyword>false</keyword>
    </context>

    <context id="import" style-ref="def:preprocessor">
      <keyword>import</keyword>
    </context>

    <context id="builtin-functions" style-ref="def:function">
      <keyword>abs</keyword>
      <keyword>fabs</keyword>
      <keyword>sqrt</keyword>
      <keyword>cos</keyword>
      <keyword>sin</keyword>
      <keyword>exp</keyword>
      <keyword>expi</keyword>
      <keyword>max</keyword>
      <keyword>min</keyword>
      <keyword>pow</keyword>
      <keyword>draw</keyword>
      <keyword>filldraw</keyword>
      <keyword>circle</keyword>
      <keyword>opacity</keyword>
      <keyword>size</keyword>
      <keyword>scale</keyword>
      <keyword>rotate</keyword>
      <keyword>linewidth</keyword>
      <keyword>linetype</keyword>
      <keyword>fontsize</keyword>
      <keyword>gray</keyword>
      <keyword>label</keyword>
      <keyword>TrueMargin</keyword>
      <keyword>shift</keyword>
      <keyword>reltime</keyword>
      <keyword>subpath</keyword>
      <keyword>point</keyword>
      <keyword>arctime</keyword>
      <keyword>arrowbase</keyword>
      <keyword>arrowbasepoints</keyword>
      <keyword>length</keyword>
      <keyword>relpoint</keyword>
      <keyword>unit</keyword>
      <keyword>dir</keyword>
      <keyword>degrees</keyword>
      <keyword>arclength</keyword>
      <keyword>cyclic</keyword>
    </context>

    <context id="special-variables" style-ref="def:special-constant">
      <keyword>defaultpen</keyword>
      <keyword>black</keyword>
      <keyword>white</keyword>
      <keyword>blue</keyword>
      <keyword>green</keyword>
      <keyword>yellow</keyword>
      <keyword>cyan</keyword>
      <keyword>magenta</keyword>
      <keyword>red</keyword>
      <keyword>light</keyword>
      <keyword>purple</keyword>
      <keyword>pink</keyword>
      <keyword>orange</keyword>
      <keyword>brown</keyword>
    </context>

    <!--Main context-->
    <context id="asy" class="no-spell-check">
      <include>
        <context ref="gtk-doc:inline-docs-section"/>
        <context ref="def:c-like-comment" style-ref="def:comment"/>
        <context ref="def:c-like-comment-multiline" style-ref="def:comment"/>
        <context ref="def:c-like-close-comment-outside-comment" style-ref="def:comment"/>
        <context ref="char"/>
        <context ref="string"/>
        <context ref="float"/>
        <context ref="hexadecimal"/>
        <context ref="invalid-hexadecimal"/>
        <context ref="octal"/>
        <context ref="invalid-octal"/>
        <context ref="decimal"/>
        <context ref="keywords"/>
        <context ref="types"/>
        <context ref="boolean"/>
        <context ref="import"/>
        <context ref="builtin-functions"/>
        <context ref="special-variables"/>
      </include>
    </context>
  </definitions>
</language>
